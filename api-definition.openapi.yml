openapi: 3.0.3
info:
  title: BarManager
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://localhost:8080
paths:
  /bar:
    get:
      tags:
        - get Bar
      summary: get bar with given id
      operationId: getBar
      parameters:
        - in: path
          name: bar_id
          description: Unique id to identify bar
          required: true
          schema:
            type: integer
      responses:
        '200':
        description:
  /ingredients:
    get:
      tags:
        - get Ingredients
      summary: Get all ingredients
      operationId: getIngredients
      parameters:
        - in: path
          name: bar_id
          description: Unique id to identify bar
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Ingredients retrived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ingredients_response'
        '404':
            description: Not Found
            content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/problem'
        '500':
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/problem'      
components:
  schemas:
    bar:
      type: object
      required:
        - id
        - name
        - owner
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Toms coole Bar
        owner:
          type: object
          $ref: '#/components/schemas/owner'
    owner:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Tom fucking Schmanke
    cocktails:
      type: object
      required:
        - id
        - name
        - ingredients
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Awesome mega Cocktail
        availableAt:
          type: array
          items:
            $ref: '#/components/schemas/bar'
          example: Toms coole bar
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/ingredientGroup'
    ingredientGroup:
      type: object
      required:
        - id
        - name
        - unitOfMeasurement
        - ingredients
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Gin de Cologne
        unitOfMeasurement:
          $ref: '#/components/schemas/unitOfMeasurement'
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/ingredient'
    ingredient:
      type: object
      required:
        - id
        - name
        - amount
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Awesome mega ingredient
        amount:
          type: integer
          format: int64
          example: 500
        description:
          type: string
          example: Cola mit iceee
    unitOfMeasurement:
      type: string
      example: ml
      enum:
        - ML
        - G
        - PIECE
    problem:
      type: object
      properties:
        type: 
          type: string
          format: uri
          description: ahahhahahahahah
    ingredients_response:
      type: array
      items:
        $ref: '#/components/schemas/ingredientGroup'
    
      